#!/usr/bin/env bash

function createProject()
{
    echo "üîß Creating database..."
    mysql -h 'localhost' -u root ${ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME};"

    echo "üîß Creating Laravel project named $NAME..."
    laravel new $NAME --jet --stack=livewire --teams --quiet > /dev/null 2>&1
    git add . && git commit -m "Initial Commit"  --quiet

    echo "üîß Installing packages..."
    cd $NAME
    composer require yajra/laravel-datatables \
    rap2hpoutre/laravel-log-viewer \
    predis/predis \
    cleaniquecoders/laravel-observers \
    cleaniquecoders/laravel-uuid \
    lab404/laravel-impersonate \
    livewire/livewire \
    owen-it/laravel-auditing \
    spatie/laravel-activitylog \
    spatie/laravel-medialibrary \
    spatie/laravel-tags \
    spatie/laravel-permission \
    yadahan/laravel-authentication-log \
    --quiet --no-ansi --no-interaction
    git add . && git commit -m "Added common packages"  --quiet

    echo "üîß Installing development packages..."
    composer require barryvdh/laravel-debugbar  \
    --quiet --no-ansi --no-interaction --dev
    git add . && git commit -m "Added development packages"  --quiet

    echo "üîß Publishing packages config and assets..."
    php artisan vendor:publish --all --force --quiet
    git add . && git commit -m "Publishing packages config and assets"  --quiet

    echo "üîß Setting up front-end assets..."
    yarn install --silent > /dev/null 2>&1
    npm run prod > /dev/null 2>&1
    git add . && git commit -m "Setting up front-end assets"  --quiet

    echo "üîß Copying stubs..."
    # Need to copy the stubs from snap/stubs absolute directory to  project directory
    cp -R ../stubs/app .
    cp -R ../stubs/bin .
    cp -R ../stubs/config .
    cp -R ../stubs/database .
    cp -R ../stubs/routes .
    cp -R ../stubs/storage .
    cp -R ../stubs/support .
    cp -R ../stubs/tinker .
    git add . && git commit -m "Copied stubs"  --quiet

    echo "üîß Run the migrations..."
    php artisan reload:db

    echo "üîß Setting up Valet.."
    cd public && valet link $NAME --secure --quiet > /dev/null 2>&1 && cd ../ && valet open $NAME

    echo "Launching the project in Visual Studio Code"
    code .
    clear
    cd ../
    echo "üöÄ Installation completed!"
}

NAME="project"

if [ $1 ];
then
    NAME=$1
fi

if [ -d $NAME ];
then 
    NAME="$NAME"_"$(openssl rand -hex 2)"
    echo "‚ö†Ô∏è  Project renamed to $NAME because project name provided already exists"
fi

BIN_MYSQL=$(which mysql)
ROOT_PASSWORD=

DB_HOST='localhost'
DB_NAME=$NAME

createProject