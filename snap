#!/usr/bin/env bash

function createProject()
{
    echo "üîß Creating database..."
    mysql -h 'localhost' -u root ${ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME};"

    echo "üîß Creating Laravel project named $NAME..."
    laravel new $NAME --branch=main --no-ansi --quiet > /dev/null 2>&1

    echo "üîß Navigating to project directory..."
    cd $NAME

    echo "üîß Initial Commit..."
    git init > /dev/null 2>&1 && git add . > /dev/null 2>&1 && git commit -m "Initial Commit"  --quiet

    echo "üîß Updating MAIL configuration..."
    cp .env .env.example
    sed 's/MAIL_FROM_ADDRESS=null/MAIL_FROM_ADDRESS=noreply@app.com/g' .env.example > .env

    echo "üîß Updating .env.example configuration..."
    cp .env .env.example
    git add . > /dev/null 2>&1 && git commit -m "Update .env.example"  --quiet

    echo "üîß Updating README.md..."
    sed "s/YOUR_APP/${NAME}/g" $SNAP_PATH/stubs/README.md > README.md
    git add . > /dev/null 2>&1 && git commit -m "Update README.md"  --quiet

    echo "üîß Installing packages..."
    composer require \
    blade-ui-kit/blade-icons \
    cleaniquecoders/laravel-observers \
    cleaniquecoders/laravel-uuid \
    diglactic/laravel-breadcrumbs \
    lab404/laravel-impersonate \
    laravel/jetstream \
    livewire/livewire \
    owen-it/laravel-auditing \
    rappasoft/laravel-livewire-tables \
    spatie/enum \
    spatie/laravel-enum \
    spatie/laravel-medialibrary \
    spatie/laravel-tags \
    spatie/laravel-permission \
    rap2hpoutre/laravel-log-viewer \
    predis/predis \
    yadahan/laravel-authentication-log \
    --quiet --no-ansi --no-interaction
    git add . > /dev/null 2>&1 && git commit -m "Added common packages"  --quiet

    echo "üîß Installing development packages..."
    composer require \
    barryvdh/laravel-debugbar  \
    nunomaduro/larastan \
    spatie/laravel-ray \
    friendsofphp/php-cs-fixer \
    --quiet --no-ansi --no-interaction --dev
    git add . > /dev/null 2>&1 && git commit -m "Added development packages"  --quiet

    echo "üîß Installing frontend packages..."
    yarn add tailwindcss \
    alpinejs \
    @tailwindcss/aspect-ratio \
    @tailwindcss/forms \
    @tailwindcss/line-clamp \
    @tailwindcss/typography \
    flatpickr \
    jquery \
    select2 \
    postcss-import \
    sass \
    sass-loader \
    --dev --silent > /dev/null 2>&1
    git add . > /dev/null 2>&1 && git commit -m "Added frontend packages"  --quiet

    ## No need, since we already getting the config & assets from stubs
    # echo "üîß Publishing packages config and assets..."
    # php artisan vendor:publish --all --force --quiet
    # git add . > /dev/null 2>&1 && git commit -m "Publishing packages config and assets"  --quiet

    echo "üîß Copying stubs..."
    # Need to copy the stubs from snap/stubs absolute directory to  project directory
    cp -R $SNAP_PATH/stubs/ .
    git add . > /dev/null 2>&1 && git commit -m "Copied stubs"  --quiet

    echo "üîß Compiling frontend assets..."
    npm run prod > /dev/null 2>&1
    git add . > /dev/null 2>&1 && git commit -m "Compiled front-end assets"  --quiet

    echo "üîß Create notifications & queue table..."
    php artisan notifications:table
    php artisan queue:table
    git add . > /dev/null 2>&1 && git commit -m "Created notifications and queue table"  --quiet

    echo "üîß Creating develop branch..."
    git checkout -b develop 

    echo "üîß Run the migrations..."
    php artisan reload:all --dev > /dev/null 2>&1

    echo "üöÄ Installation completed!"
    echo ""

    echo "Launching the project in Visual Studio Code"
    code .
    
    clear

    echo "Serve the project"
    php artisan serve
}

NAME="project"

if [ $1 ];
then
    NAME=$1
fi

if [ -d $NAME ];
then 
    NAME="$NAME"_"$(openssl rand -hex 2)"
    echo "‚ö†Ô∏è  Project renamed to $NAME because project name provided already exists"
fi

BIN_MYSQL=$(which mysql)
ROOT_PASSWORD=

DB_HOST='localhost'
DB_NAME=$NAME

createProject
